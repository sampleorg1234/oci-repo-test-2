ConfigMaps:
  enabled: false
  maps: []
ConfigSecrets:
  enabled: false
  secrets: []
ContainerPort:
- envoyPort: 8799
  idleTimeout: 1800s
  name: app
  port: 8080
  servicePort: 80
  supportStreaming: false
  useHTTP2: false
EnvVariables: []
EnvVariablesFromFieldPath:
- fieldPath: metadata.name
  name: POD_NAME
GracePeriod: 30
LivenessProbe:
  Path: ""
  command: []
  failureThreshold: 3
  httpHeaders: []
  initialDelaySeconds: 20
  periodSeconds: 10
  port: 8080
  scheme: ""
  successThreshold: 1
  tcp: false
  timeoutSeconds: 5
MaxSurge: 1
MaxUnavailable: 0
MinReadySeconds: 60
ReadinessProbe:
  Path: ""
  command: []
  failureThreshold: 3
  httpHeaders: []
  initialDelaySeconds: 20
  periodSeconds: 10
  port: 8080
  scheme: ""
  successThreshold: 1
  tcp: false
  timeoutSeconds: 5
Spec:
  Affinity:
    Key: null
    Values: nodes
    key: ""
ambassadorMapping:
  ambassadorId: ""
  cors: {}
  enabled: false
  hostname: devtron.example.com
  labels: {}
  prefix: /
  retryPolicy: {}
  rewrite: ""
  tls:
    context: ""
    create: false
    hosts: []
    secretName: ""
app: "1"
appLabels: {}
appMetrics: false
args:
  enabled: false
  value:
  - /bin/sh
  - -c
  - touch /tmp/healthy; sleep 30; rm -rf /tmp/healthy; sleep 600
autoPromotionSeconds: 30
autoscaling:
  MaxReplicas: 2
  MinReplicas: 1
  TargetCPUUtilizationPercentage: 90
  TargetMemoryUtilizationPercentage: 80
  annotations: {}
  behavior: {}
  enabled: false
  extraMetrics: []
  labels: {}
command:
  enabled: false
  value: []
  workingDir: {}
containerExtraSpecs: {}
containerSecurityContext: {}
containerSpec:
  lifecycle:
    enabled: false
    postStart:
      httpGet:
        host: example.com
        path: /example
        port: 90
    preStop:
      exec:
        command:
        - sleep
        - "10"
containers: []
dbMigrationConfig:
  enabled: false
deployment:
  strategy:
    rolling:
      maxSurge: 25%
      maxUnavailable: 1
deploymentType: ROLLING
env: "4"
envoyproxy:
  configMapName: ""
  image: quay.io/devtron/envoy:v1.14.1
  lifecycle: {}
  resources:
    limits:
      cpu: 50m
      memory: 50Mi
    requests:
      cpu: 50m
      memory: 50Mi
hostAliases: []
image:
  pullPolicy: IfNotPresent
imagePullSecrets: []
ingress:
  annotations: {}
  className: ""
  enabled: false
  hosts:
  - host: chart-example1.local
    pathType: ImplementationSpecific
    paths:
    - /example1
  labels: {}
  tls: []
ingressInternal:
  annotations: {}
  className: ""
  enabled: false
  hosts:
  - host: chart-example1.internal
    pathType: ImplementationSpecific
    paths:
    - /example1
  - host: chart-example2.internal
    pathType: ImplementationSpecific
    paths:
    - /example2
    - /example2/healthz
  tls: []
initContainers: []
istio:
  enable: false
  gateway:
    annotations: {}
    enabled: false
    host: example.com
    labels: {}
    tls:
      enabled: false
      secretName: secret-name
  virtualService:
    annotations: {}
    enabled: false
    gateways: []
    hosts: []
    http:
    - corsPolicy: {}
      headers: {}
      match:
      - uri:
          prefix: /v1
      - uri:
          prefix: /v2
      retries:
        attempts: 2
        perTryTimeout: 3s
      rewriteUri: /
      route:
      - destination:
          host: service1
          port: 80
      timeout: 12s
    - route:
      - destination:
          host: service2
    labels: {}
kedaAutoscaling:
  advanced: {}
  authenticationRef: {}
  cooldownPeriod: 300
  enabled: false
  envSourceContainerName: ""
  fallback: {}
  idleReplicaCount: 0
  maxReplicaCount: 2
  minReplicaCount: 1
  pollingInterval: 30
  triggerAuthentication:
    enabled: false
    name: ""
    spec: {}
  triggers: []
nodeSelector: {}
orchestrator.deploymant.algo: 1
pauseForSecondsBeforeSwitchActive: 30
pipelineName: cd-1-jues
podAnnotations: {}
podDisruptionBudget: {}
podExtraSpecs: {}
podLabels: {}
podSecurityContext: {}
prometheus:
  release: monitoring
prometheusRule:
  additionalLabels: {}
  enabled: false
  namespace: ""
rawYaml: []
releaseVersion: "6"
replicaCount: 1
resources:
  limits:
    cpu: "0.05"
    memory: 50Mi
  requests:
    cpu: "0.01"
    memory: 10Mi
rolloutAnnotations: {}
rolloutLabels: {}
secret:
  data: {}
  enabled: false
server:
  deployment:
    image: ayushm10/samplerepo
    image_tag: 042d04e7-1-1
service:
  annotations: {}
  loadBalancerSourceRanges: []
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: false
  name: ""
servicemonitor:
  additionalLabels: {}
tolerations: []
topologySpreadConstraints: []
volumeMounts: []
volumes: []
waitForSecondsBeforeScalingDown: 30
